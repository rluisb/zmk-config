/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        to_layer_1 {
            bindings = <&to 1>;
            key-positions = <55 1>;
        };

        to_layer_2 {
            bindings = <&to 2>;
            key-positions = <55 2>;
        };

        to_layer_3 {
            bindings = <&to 3>;
            key-positions = <55 3>;
        };

        to_layer_0 {
            bindings = <&to 0>;
            key-positions = <55 10>;
        };
    };

    behaviors {
        h_left_arrow: h_left_arrow {
            compatible = "zmk,behavior-mod-morph";
            label = "H_LEFT_ARROW";
            bindings = <&kp H>, <&kp LEFT_ARROW>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_RCTL)>;
        };

        j_down_arrow: j_down_arrow {
            compatible = "zmk,behavior-mod-morph";
            label = "J_DOWN_ARROW";
            bindings = <&kp J>, <&kp DOWN_ARROW>;

            #binding-cells = <0>;
            mods = <(MOD_RCTL|MOD_RSFT)>;
        };

        k_up_arrow: k_up_arrow {
            compatible = "zmk,behavior-mod-morph";
            label = "K_UP_ARROW";
            bindings = <&kp K>, <&kp UP_ARROW>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_RCTL)>;
        };

        l_right_arrow: l_right_arrow {
            compatible = "zmk,behavior-mod-morph";
            label = "L_RIGHT_ARROW";
            bindings = <&kp L>, <&kp RIGHT_ARROW>;

            #binding-cells = <0>;
            mods = <(MOD_RCTL|MOD_RSFT)>;
        };

        p_plus: p_plus {
            compatible = "zmk,behavior-mod-morph";
            label = "P_PLUS";
            bindings = <&kp P>, <&kp KP_PLUS>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_RCTL)>;
        };

        e_equal: e_equal {
            compatible = "zmk,behavior-mod-morph";
            label = "E_EQUAL";
            bindings = <&kp E>, <&kp KP_EQUAL>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_RCTL)>;
        };

        workspace_change: workspace_change {
            compatible = "zmk,behavior-hold-tap";
            label = "WORKSPACE_CHANGE";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <1>;
            flavor = "tap-preferred";
            quick-tap-ms = <3>;
        };

        c_accent_tap_dance: c_accent_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "C_ACCENT_TAP_DANCE";
            #binding-cells = <0>;
            bindings = <&kp C>, <&kp LA(C)>;

            tapping-term-ms = <1>;
        };

        tilda_tap_dance: tilda_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "TILDA_TAP_DANCE";
            #binding-cells = <0>;
            bindings = <&kp N>, <&kp LA(N)>;

            tapping-term-ms = <1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        macos {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp ESCAPE        &workspace_change LA(NUMBER_1) NUMBER_1  &workspace_change LA(NUMBER_2) N2  &workspace_change LA(N3) N3  &workspace_change LA(N4) N4  &kp N5                                                   &kp N6                &workspace_change LA(N7) N7  &kp N8         &kp N9                         &kp N0    &kp GRAVE
&kp TAB           &kp Q                                    &kp W                              &kp E                        &kp R                        &kp T                                                    &kp Y                 &kp U                        &kp I          &kp O                          &kp P     &kp BACKSPACE
&kp LEFT_SHIFT    &kp A                                    &kp S                              &kp D                        &kp F                        &kp G                                                    &h_left_arrow         &j_down_arrow                &k_up_arrow    &l_right_arrow                 &kp SEMI  &kp SQT
&kp LEFT_CONTROL  &kp Z                                    &kp X                              &c_accent_tap_dance          &kp V                        &kp B             &kp LEFT_BRACKET    &kp RIGHT_BRACKET  &tilda_tap_dance      &kp M                        &kp COMMA      &workspace_change LA(DOT) DOT  &kp FSLH  &kp EQUAL
                                                                                              &kp F12                      &kp LEFT_ALT                 &kp LEFT_COMMAND  &kp SPACE           &kp ENTER          &mt RC(RSHFT) DELETE  &kp MINUS                    &kp BACKSLASH
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        macos_lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&kp TILDE         &kp EXCLAMATION  &kp AT  &kp HASH    &kp DOLLAR    &kp PERCENT                         &kp CARET   &kp AMPERSAND  &kp ASTERISK   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS
&kp F1            &kp F2           &kp F3  &kp F4      &kp F5        &kp F6                              &kp F7      &kp F8         &kp F9         &kp F10               &kp F11                &kp PLUS
&kp LEFT_SHIFT    &trans           &trans  &trans      &trans        &trans                              &bt BT_CLR  &bt BT_SEL 0   &bt BT_SEL 1   &trans                &kp COLON              &kp PIPE
&kp LEFT_CONTROL  &trans           &trans  &trans      &trans        &trans            &trans    &trans  &trans      &trans         &kp LT         &kp GT                &kp QUESTION           &trans
                                           &kp ESCAPE  &kp LEFT_ALT  &kp LEFT_COMMAND  &trans    &trans  &trans      &trans         &kp BACKSLASH
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        macos_raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&kp TILDE  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT                    &kp CARET    &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS
&kp GRAVE  &kp N1           &kp N2       &kp N3    &kp N4      &kp N5                         &kp N6       &kp N7         &kp N8        &kp N9                &kp N0                 &kp KP_PLUS
&kp F1     &kp F2           &kp F3       &kp F4    &kp F5      &kp F6                         &kp LEFT     &kp DOWN       &kp UP_ARROW  &kp RIGHT             &trans                 &trans
&kp F7     &kp F8           &kp F9       &kp F10   &kp F11     &kp F12      &trans    &trans  &kp KP_PLUS  &kp MINUS      &kp EQUAL     &kp LBKT              &kp RBKT               &trans
                                         &trans    &trans      &trans       &trans    &trans  &trans       &trans         &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        fortnite {
            bindings = <
&kp ESCAPE        &kp N1  &kp N2  &kp N3  &kp N4            &kp N5                          &kp N6  &kp N7  &kp N8         &kp N9   &kp N0    &kp MINUS
&kp TAB           &kp Q   &kp W   &kp E   &kp R             &kp T                           &kp Y   &kp U   &kp I          &kp O    &kp P     &kp BACKSPACE
&kp LEFT_SHIFT    &kp A   &kp S   &kp D   &kp F             &kp G                           &kp H   &kp J   &kp K          &kp L    &kp SEMI  &kp SQT
&kp LEFT_CONTROL  &kp Z   &kp X   &kp C   &kp V             &kp B   &kp LBKT     &kp RBKT   &kp N   &kp M   &kp COMMA      &kp DOT  &kp FSLH  &trans
                                  &kp H   &kp LEFT_CONTROL  &kp M   &kp SPACE    &kp ENTER  &trans  &trans  &kp BACKSLASH
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans
            >;
        };
    };
};
